From 9de5c4dbb08e052e8180af12815d3e7f3d1cdf2b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sun, 15 Dec 2019 17:53:14 +0100
Subject: [PATCH] Do not add resume= kernel option
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Qubes don't support hibernation.

From ea91297b2a7599937ceeefeb21a3a185db9118f2
By Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
---
 pyanaconda/bootloader/base.py | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/pyanaconda/modules/storage/bootloader/base.py b/pyanaconda/modules/storage/bootloader/base.py
index f1aa6acca..45a27bccb 100644
--- a/pyanaconda/modules/storage/bootloader/base.py
+++ b/pyanaconda/modules/storage/bootloader/base.py
@@ -730,12 +730,6 @@ class BootLoader(object):
         swap_devices = storage.fsset.swap_devices
         dracut_devices.extend(swap_devices)
 
-        # Add resume= option to enable hibernation on x86 and arm.
-        # Choose the largest swap device for that.
-        if (blivet.arch.is_x86() or blivet.arch.is_arm()) and swap_devices:
-            resume_device = max(swap_devices, key=lambda x: x.size)
-            self.boot_args.add("resume=%s" % resume_device.fstab_spec)
-
         # Does /usr have its own device? If so, we need to tell dracut
         usr_device = storage.mountpoints.get("/usr")
         if usr_device:
-- 
2.25.2

