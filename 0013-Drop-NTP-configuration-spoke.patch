From 029406c615b6d83038e4b353e382cbee3c9115c8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sun, 15 Dec 2019 17:24:52 +0100
Subject: [PATCH] Drop NTP configuration spoke

---
 pyanaconda/ui/gui/spokes/datetime_spoke.glade |  62 +---
 pyanaconda/ui/gui/spokes/datetime_spoke.py    | 334 ------------------
 2 files changed, 8 insertions(+), 388 deletions(-)


diff --git a/pyanaconda/ui/gui/spokes/datetime_spoke.glade b/pyanaconda/ui/gui/spokes/datetime_spoke.glade
index 188f93b..f736ce6 100644
--- a/pyanaconda/ui/gui/spokes/datetime_spoke.glade
+++ b/pyanaconda/ui/gui/spokes/datetime_spoke.glade
@@ -20,11 +20,6 @@
     <property name="inline_completion">True</property>
     <signal name="match-selected" handler="on_completion_match_selected" object="cityCombobox" swapped="no"/>
   </object>
-  <object class="GtkImage" id="configImage">
-    <property name="visible">True</property>
-    <property name="can_focus">False</property>
-    <property name="icon_name">system-run-symbolic</property>
-  </object>
   <object class="GtkListStore" id="days">
     <columns>
       <!-- column-name idx -->
@@ -242,59 +237,13 @@
                                     <property name="can_focus">False</property>
                                     <property name="halign">end</property>
                                     <child>
-                                      <object class="GtkLabel" id="networkTimeLabel">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="label" translatable="yes" context="GUI|Date and Time">_Network Time</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="mnemonic_widget">networkTimeSwitch</property>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">3</property>
-                                        <property name="position">0</property>
-                                      </packing>
+                                      <placeholder/>  
                                     </child>
                                     <child>
-                                      <object class="GtkSwitch" id="networkTimeSwitch">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">True</property>
-                                        <property name="valign">center</property>
-                                        <property name="margin_end">6</property>
-                                        <signal name="notify::active" handler="on_ntp_switched" swapped="no"/>
-                                        <child internal-child="accessible">
-                                          <object class="AtkObject" id="networkTimeSwitch-atkobject">
-                                            <property name="AtkObject::accessible-name" translatable="yes">Use Network Time</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">1</property>
-                                        <property name="position">1</property>
-                                      </packing>
+                                      <placeholder/>                     
                                     </child>
                                     <child>
-                                      <object class="GtkButton" id="ntpConfigButton">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">True</property>
-                                        <property name="receives_default">True</property>
-                                        <property name="image">configImage</property>
-                                        <signal name="clicked" handler="on_ntp_config_clicked" swapped="no"/>
-                                        <child internal-child="accessible">
-                                          <object class="AtkObject" id="ntpConfigButton-atkobject">
-                                            <property name="AtkObject::accessible-name" translatable="yes">Configure NTP</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">1</property>
-                                        <property name="position">2</property>
-                                      </packing>
+                                      <placeholder/>                                 
                                     </child>
                                   </object>
                                 </child>
diff --git a/pyanaconda/ui/gui/spokes/datetime_spoke.py b/pyanaconda/ui/gui/spokes/datetime_spoke.py
index 9b56e5d..c12433a 100644
--- a/pyanaconda/ui/gui/spokes/datetime_spoke.py
+++ b/pyanaconda/ui/gui/spokes/datetime_spoke.py
@@ -24,7 +24,6 @@ import functools
 import copy
 
 from pyanaconda import isys
-from pyanaconda import ntp
 from pyanaconda import flags
 from pyanaconda.anaconda_loggers import get_module_logger
 from pyanaconda.core import constants
@@ -37,14 +36,12 @@ from pyanaconda.localization import get_xlated_timezone, resolve_date_format
 from pyanaconda.modules.common.structures.timezone import TimeSourceData
 from pyanaconda.modules.common.constants.services import TIMEZONE, NETWORK
 from pyanaconda.modules.common.util import is_module_available
-from pyanaconda.ntp import NTPServerStatusCache
 from pyanaconda.ui.communication import hubQ
 from pyanaconda.ui.common import FirstbootSpokeMixIn
 from pyanaconda.ui.gui.spokes import NormalSpoke
 from pyanaconda.ui.categories.localization import LocalizationCategory
 from pyanaconda.ui.gui.utils import blockedHandler
-from pyanaconda.ui.gui.spokes.lib.ntp_dialog import NTPConfigDialog
-from pyanaconda.timezone import NTP_SERVICE, get_all_regions_and_timezones, get_timezone, is_valid_timezone
+from pyanaconda.timezone import get_all_regions_and_timezones, get_timezone, is_valid_timezone
 from pyanaconda.threading import threadMgr, AnacondaThread
 
 import gi
@@ -200,9 +197,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
         self._timezone_module = TIMEZONE.get_proxy()
         self._network_module = NETWORK.get_proxy()
 
-        self._ntp_servers = []
-        self._ntp_servers_states = NTPServerStatusCache()
-
     def initialize(self):
         NormalSpoke.initialize(self)
         self.initialize_start()
@@ -265,8 +259,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
         self._year_format, suffix = formats[widgets.index(year_box)]
         year_label.set_text(suffix)
 
-        self._ntpSwitch = self.builder.get_object("networkTimeSwitch")
-
         self._regions_zones = get_all_regions_and_timezones()
 
         # Set the initial sensitivity of the AM/PM toggle based on the time-type selected
@@ -353,7 +345,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
             return
 
         self._timezone_module.Timezone = region + "/" + city
-        self._timezone_module.NTPEnabled = self._ntpSwitch.get_active()
         self._kickstarted = False
 
     def execute(self):
@@ -393,37 +384,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
 
         self._update_datetime()
 
-        # update the ntp configuration
-        self._ntp_servers = TimeSourceData.from_structure_list(
-            self._timezone_module.TimeSources
-        )
-
-        if not self._ntp_servers:
-            try:
-                self._ntp_servers = ntp.get_servers_from_config()
-            except ntp.NTPconfigError:
-                log.warning("Failed to load NTP servers configuration")
-
-        self._ntp_servers_states = NTPServerStatusCache()
-        self._ntp_servers_states.changed.connect(self._update_ntp_server_warning)
-
-        has_active_network = self._network_module.Connected
-
-        if not has_active_network:
-            self._show_no_network_warning()
-        else:
-            self.clear_info()
-
-            for server in self._ntp_servers:
-                self._ntp_servers_states.check_status(server)
-
-        if conf.system.can_set_time_synchronization:
-            ntp_working = has_active_network and is_service_running(NTP_SERVICE)
-        else:
-            ntp_working = self._timezone_module.NTPEnabled
-
-        self._ntpSwitch.set_active(ntp_working)
-
     @async_action_wait
     def _set_timezone(self, timezone):
         """
@@ -879,22 +839,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
         footer_alignment = self.builder.get_object("footerAlignment")
         footer_alignment.set_sensitive(sensitive)
 
-    def _get_working_server(self):
-        """Get a working NTP server."""
-        for server in self._ntp_servers:
-            status = self._ntp_servers_states.get_status(server)
-            if status == constants.NTP_SERVER_OK:
-                return server
-
-        return None
-
-    def _show_no_network_warning(self):
-        self.set_warning(_("You need to set up networking first if you "
-                           "want to use NTP"))
-
-    def _show_no_ntp_server_warning(self):
-        self.set_warning(_("You have no working NTP server configured"))
-
     def _cancel_planned_update(self):
         """Cancel system time update planned by manual setting"""
         # cancel system time update
@@ -907,76 +851,4 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
             self._update_datetime_timer = Timer()
             self._update_datetime_timer.timeout_sec(1, self._update_datetime)
 
-    def on_ntp_switched(self, switch, *args):
-        if switch.get_active():
-            self._cancel_planned_update()
-
-            #turned ON
-            if not conf.system.can_set_time_synchronization:
-                #cannot touch runtime system, not much to do here
-                return
-
-            if not self._network_module.Connected:
-                self._show_no_network_warning()
-                switch.set_active(False)
-                return
-            else:
-                self._update_ntp_server_warning()
-
-            ret = start_service(NTP_SERVICE)
-            self._set_date_time_setting_sensitive(False)
-
-            #if starting chronyd failed and chronyd is not running,
-            #set switch back to OFF
-            if (ret != 0) and not is_service_running(NTP_SERVICE):
-                switch.set_active(False)
-
-        else:
-            #turned OFF
-            if not conf.system.can_set_time_synchronization:
-                #cannot touch runtime system, nothing to do here
-                return
-
-            self._set_date_time_setting_sensitive(True)
-            ret = stop_service(NTP_SERVICE)
-
-            #if stopping chronyd failed and chronyd is running,
-            #set switch back to ON
-            if (ret != 0) and is_service_running(NTP_SERVICE):
-                switch.set_active(True)
-
-            self.clear_info()
-
-    def on_ntp_config_clicked(self, *args):
-        servers = copy.deepcopy(self._ntp_servers)
-        states = self._ntp_servers_states
-
-        # Temporarily disconnect the update callback.
-        states.changed.disconnect(self._update_ntp_server_warning)
-
-        dialog = NTPConfigDialog(self.data, servers, states)
-        dialog.refresh()
-
-        with self.main_window.enlightbox(dialog.window):
-            response = dialog.run()
-
-        # Connect the update callback again.
-        states.changed.connect(self._update_ntp_server_warning)
-
-        if response == 1:
-            self._timezone_module.TimeSources = \
-                TimeSourceData.to_structure_list(servers)
-
-            self._ntp_servers = servers
-            self._update_ntp_server_warning()
-
-    def _update_ntp_server_warning(self):
-        """Update the warning about working NTP servers."""
-        if not self._ntpSwitch.get_active():
-            return
-
-        self.clear_info()
-        working_server = self._get_working_server()
-
-        if working_server is None:
-            self._show_no_ntp_server_warning()
+  
\ No newline at end of file
diff --git a/pyanaconda/ui/gui/spokes/user.py b/pyanaconda/ui/gui/spokes/user.py
index 0f20005..3f5f175 100644
--- a/pyanaconda/ui/gui/spokes/user.py
+++ b/pyanaconda/ui/gui/spokes/user.py
@@ -30,7 +30,6 @@ from pyanaconda.modules.common.util import is_module_available
 from pyanaconda.ui.gui.spokes import NormalSpoke
 from pyanaconda.ui.gui import GUIObject
 from pyanaconda.ui.categories.user_settings import UserSettingsCategory
-from pyanaconda.ui.common import FirstbootSpokeMixIn
 from pyanaconda.ui.helpers import InputCheck
 from pyanaconda.ui.gui.helpers import GUISpokeInputCheckHandler, GUIDialogInputCheckHandler
 from pyanaconda.ui.gui.utils import blockedHandler, set_password_visibility
@@ -44,7 +43,7 @@ log = get_module_logger(__name__)
 __all__ = ["UserSpoke"]
 
 
-class UserSpoke(FirstbootSpokeMixIn, NormalSpoke, GUISpokeInputCheckHandler):
+class UserSpoke(NormalSpoke, GUISpokeInputCheckHandler):
     """
        .. inheritance-diagram:: UserSpoke
           :parts: 3
@@ -244,7 +243,7 @@ class UserSpoke(FirstbootSpokeMixIn, NormalSpoke, GUISpokeInputCheckHandler):
     @property
     def mandatory(self):
         """Only mandatory if no admin user has been requested."""
-        return not self._users_module.CheckAdminUserExists()
+        return not flags.automatedInstall
 
     def apply(self):
         # set the password only if the user enters anything to the text entry
diff --git a/pyanaconda/ui/tui/spokes/user.py b/pyanaconda/ui/tui/spokes/user.py
index e914c1c..24bd9b8 100644
--- a/pyanaconda/ui/tui/spokes/user.py
+++ b/pyanaconda/ui/tui/spokes/user.py
@@ -40,7 +40,7 @@ __all__ = ["UserSpoke"]
 FULLNAME_ERROR_MSG = N_("Full name can't contain the ':' character")
 
 
-class UserSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
+class UserSpoke(NormalTUISpoke):
     """
        .. inheritance-diagram:: UserSpoke
           :parts: 3
@@ -71,7 +71,6 @@ class UserSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
         return False
 
     def __init__(self, data, storage, payload):
-        FirstbootSpokeMixIn.__init__(self)
         NormalTUISpoke.__init__(self, data, storage, payload)
 
         self.initialize_start()
@@ -234,10 +233,8 @@ class UserSpoke(FirstbootSpokeMixIn, NormalTUISpoke):
         - No admin user has been created
         - Password has been requested but not entered
         """
-        return (not self._users_module.CheckAdminUserExists() or
-                (self._use_password and not bool(self.user.password or
-                                                 self.user.is_crypted)))
-
+        return not flags.automatedInstall
+        
     @property
     def status(self):
         user_list = get_user_list(self._users_module)
-- 
2.25.2
