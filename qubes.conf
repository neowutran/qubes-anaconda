[Profile]
# Define the profile.
profile_id = qubes

[Profile Detection]
# Match os-release values.
os_id = qubes

[Anaconda]
# Run Anaconda in the debugging mode.
debug = True

forbidden_modules =
    org.fedoraproject.Anaconda.Modules.Subscription

#[Installation System]
# Type of the installation system.
# FIXME: This is a temporary solution.
#type = UNKNOWN

# Should the installer show a warning about enabled SMT?
#can_detect_enabled_smt = False

[Installation Target]
# Type of the installation target.
#type = HARDWARE

# A path to the physical root of the target.
#physical_root = /mnt/sysimage

# A path to the system root of the target.
#system_root = /mnt/sysroot

# Should we install the network configuration?
can_configure_network = False

# Should we copy input kickstart to target system?
#can_copy_input_kickstart = True

# Should we save kickstart equivalent to installation settings to the new system?
#can_save_output_kickstart = True

# Should we save logs from the installation to the new system?
#can_save_installation_logs = True


[Network]
# Network device to be activated on boot if none was configured so.
# Valid values:
#
#   NONE                   No device
#   DEFAULT_ROUTE_DEVICE   A default route device
#   FIRST_WIRED_WITH_LINK  The first wired device with link
#
default_on_boot = NONE


[Payload]
# Default package environment.
#default_environment =

# List of ignored packages.
ignored_packages = chrony

# Names of repositories that provide latest updates.
#updates_repositories =

# Names of repositories disabled by default.
# Supported patterns: REPO-NAME, PREFIX*, *SUFFIX, *INFIX*
#disabled_repositories =
#    *source*
#    *debuginfo*
#    updates-testing
#    updates-testing-modular

# List of .treeinfo variant types to enable.
# Valid items:
#
#   addon
#   optional
#   variant
#
#enabled_repositories_from_treeinfo = addon optional variant

# Enable installation from the closest mirror.
#enable_closest_mirror = True

# Default installation source.
# Valid values:
#
#    CLOSEST_MIRROR  Use closest public repository mirror.
#    CDN             Use Content Delivery Network (CDN).
#
#default_source = CLOSEST_MIRROR

# Enable ssl verification for all HTTP connection
#verify_ssl = True

# GPG keys to import to RPM database by default.
# Specify paths on the installed system, each on a line.
# Substitutions for $releasever and $basearch happen automatically.
#default_rpm_gpg_keys =

[Security]
# Enable SELinux usage in the installed system.
# Valid values:
#
#  -1  The value is not set.
#   0  SELinux is disabled.
#   1  SELinux is enabled.
#
selinux = -1


[Bootloader]
# Type of the bootloader.
# Supported values:
#
#   DEFAULT   Choose the type by platform.
#   EXTLINUX  Use extlinux as the bootloader.
#
#type = DEFAULT

# Name of the EFI directory.
efi_dir = qubes

# Hide the GRUB menu.
#menu_auto_hide = False

# Are non-iBFT iSCSI disks allowed?
#nonibft_iscsi_boot = False

# Arguments preserved from the installation system.
#preserved_arguments =
#    cio_ignore zfcp.allow_lun_scan
#    speakup_synth apic noapic apm ide noht acpi video
#    pci nodmraid nompath nomodeset noiswmd fips selinux
#    biosdevname ipv6.disable net.ifnames net.ifnames.prefix
#    nosmt


[Storage]
# Enable dmraid usage during the installation.
#dmraid = True

# Enable iBFT usage during the installation.
#ibft = True

# Tell multipathd to use user friendly names when naming devices during the installation.
#multipath_friendly_names = True

# Do you want to allow imperfect devices (for example, degraded mdraid array devices)?
#allow_imperfect_devices = False

# Btrfs compression algorithm and level. e.g. zstd:1
#btrfs_compression =

# Default disk label type.
# Valid values:
#
#    gpt  Prefer creation of GPT disk labels.
#    mbr  Prefer creation of MBR disk labels.
#
#    If not specified, use whatever Blivet uses by default.
#
#disk_label_type = gpt

# Default file system type. Use whatever Blivet uses by default.
#file_system_type =

# Default partitioning.
# Specify a mount point and its attributes on each line.
#
# Valid attributes:
#
#   size <SIZE>    The size of the mount point.
#   min <MIN_SIZE> The size will grow from MIN_SIZE to MAX_SIZE.
#   max <MAX_SIZE> The max size is unlimited by default.
#   free <SIZE>    The required available space.
#   btrfs          The mount point will be created only for the Btrfs scheme
#
default_partitioning =
    /     (min 1 GiB, max 70 GiB)
    /home (min 500 MiB, free 50 GiB)

# Default partitioning scheme.
# Valid values:
#
#   PLAIN      Create standard partitions.
#   BTRFS      Use the Btrfs scheme.
#   LVM        Use the LVM scheme.
#   LVM_THINP  Use LVM Thin Provisioning.
#
default_scheme = LVM_THINP

# Default version of LUKS.
# Valid values:
#
#   luks1  Use version 1 by default.
#   luks2  Use version 2 by default.
#
luks_version = luks2


[Storage Constraints]

# Minimal size of the total memory.
#min_ram = 320 MiB

# Minimal size of the available memory for LUKS2.
#luks2_min_ram = 128 MiB

# Should we recommend to specify a swap partition?
#swap_is_recommended = False

# Recommended minimal sizes of partitions.
# Specify a mount point and a size on each line.
#min_partition_sizes =
#    /      250 MiB
#    /usr   250 MiB
#    /tmp   50  MiB
#    /var   384 MiB
#    /home  100 MiB
#    /boot  512 MiB

# Required minimal sizes of partitions.
# Specify a mount point and a size on each line.
#req_partition_sizes =

# Allowed device types of the / partition if any.
# Valid values:
#
#   LVM        Allow LVM.
#   MD         Allow RAID.
#   PARTITION  Allow standard partitions.
#   BTRFS      Allow Btrfs.
#   DISK       Allow disks.
#   LVM_THINP  Allow LVM Thin Provisioning.
root_device_types = LVM_THINP

# Mount points that must be on a linux file system.
# Specify a list of mount points.
#must_be_on_linuxfs = / /var /tmp /usr /home /usr/share /usr/lib

# Paths that must be directories on the / file system.
# Specify a list of paths.
#must_be_on_root = /bin /dev /sbin /etc /lib /root /mnt lost+found /proc

# Paths that must NOT be directories on the / file system.
# Specify a list of paths.
#must_not_be_on_root =

# Mount points that are recommended to be reformatted.
#
# It will be recommended to create a new file system on a mount point
# that has an allowed prefix, but doesn't have a blocked one.
# Specify lists of mount points.
#reformat_allowlist = /boot /var /tmp /usr
#reformat_blocklist = /home /usr/local /opt /var/www


[User Interface]
#custom_stylesheet = /usr/share/anaconda/pixmaps/workstation/fedora-workstation.css
hidden_spokes =
    NetworkSpoke
