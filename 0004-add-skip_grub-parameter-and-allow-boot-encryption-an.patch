From dd01bcb17433b924df9536145937d055c618dbba Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20Pierret=20=28fepitre=29?=
 <frederic.pierret@qubes-os.org>
Date: Sun, 15 Dec 2019 12:01:21 +0100
Subject: [PATCH] add skip_grub parameter and allow boot encryption and the
 lvmlv format

On coreboot systems, as grub2 can be used a payload it is possible to have all the partitions encrypted.

Based on commits bf803e7 and 62cb1ca
---
 pyanaconda/bootloader/grub2.py | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/pyanaconda/modules/storage/bootloader/grub2.py b/pyanaconda/modules/storage/bootloader/grub2.py
index daf9fc53e..be332f215 100644
--- a/pyanaconda/modules/storage/bootloader/grub2.py
+++ b/pyanaconda/modules/storage/bootloader/grub2.py
@@ -25,6 +25,7 @@ from pyanaconda.modules.storage.bootloader.base import BootLoader, BootLoaderError
 from pyanaconda.core import util
 from pyanaconda.core.configuration.anaconda import conf
 from pyanaconda.core.i18n import _
+from pyanaconda.core.kernel import kernel_arguments
 from pyanaconda.core.path import open_with_perm
 from pyanaconda.product import productName
 
@@ -130,6 +131,8 @@ class GRUB2(BootLoader):
     def __init__(self):
         super().__init__()
         self.encrypted_password = ""
+        self.encryption_support = True
+        self.skip_bootloader = kernel_arguments.get("skip_grub", False)
 
     #
     # configuration
@@ -187,7 +190,7 @@ class GRUB2(BootLoader):
         if productName.startswith("Red Hat "): # pylint: disable=no-member
             return ["xfs", "ext4", "ext3", "ext2"]
         else:
-            return ["ext4", "ext3", "ext2", "btrfs", "xfs"]
+            return ["ext4", "ext3", "ext2", "btrfs", "xfs", "lvmlv"]
 
     #
     # grub-related conveniences
-- 
2.25.2

