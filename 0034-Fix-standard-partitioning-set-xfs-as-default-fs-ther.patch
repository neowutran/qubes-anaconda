From 496b6128d90214893c111141480cc5dac070d833 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Tue, 8 Dec 2020 17:02:04 +0100
Subject: [PATCH] Fix "standard partitioning", set xfs as default fs there

Specify separate partition layout for LVM thin and standard partitions
(or LVM non-thin). Specifically, exclude thin pools (for VM volumes and
dom0 root) on non-thin setup.

Then, request xfs fstype for /var/lib/qubes on non-thin partitions, to
have reflink functionality. Old 'file' storage driver is going to be
deprecated, so don't rely on it in any of default setups.

QubesOS/qubes-issues#6252
---
 .../automatic/automatic_partitioning.py       | 29 ++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)


diff --git a/pyanaconda/modules/storage/partitioning/automatic/utils.py b/pyanaconda/modules/storage/partitioning/automatic/utils.py
index b4f7255..652b4b5 100644
--- a/pyanaconda/modules/storage/partitioning/automatic/utils.py
+++ b/pyanaconda/modules/storage/partitioning/automatic/utils.py
@@ -256,7 +256,6 @@ def schedule_implicit_partitions(storage, disks, scheme, encrypted=False, luks_f
     return devs
 
 
-
 QUBESOS_BTRFS_PARTITIONING = [
     PartSpec(
         fstype="swap",
@@ -277,7 +276,7 @@ QUBESOS_BTRFS_PARTITIONING = [
 ]
 
 
-QUBESOS_PARTITIONING = [
+QUBESOS_LVM_PARTITIONING = [
     PartSpec(
         fstype="swap",
         grow=False,
@@ -311,7 +310,30 @@ QUBESOS_PARTITIONING = [
     )
 ]
 
-
+QUBESOS_PARTITIONING = [
+    PartSpec(
+        fstype="swap",
+        grow=False,
+        lv=True,
+        encrypted=True
+    ),
+    PartSpec(
+        mountpoint="/",
+        size=Size("20GiB"),
+        required_space=Size("10GiB"),
+        grow=False,
+        lv=True,
+        encrypted=True
+    ),
+    PartSpec(
+        mountpoint="/var/lib/qubes",
+        size=Size("20GiB"),
+        fstype="xfs",
+        grow=True,
+        lv=True,
+        encrypted=True
+    )
+]
 
 
 def get_default_partitioning(scheme=None):
@@ -324,6 +346,8 @@ def get_default_partitioning(scheme=None):
 
     if scheme == AUTOPART_TYPE_BTRFS:
         return partitioning + QUBESOS_BTRFS_PARTITIONING
+    elif scheme == AUTOPART_TYPE_LVM_THINP:
+        return partitioning + QUBESOS_LVM_PARTITIONING
     else:
         return partitioning + QUBESOS_PARTITIONING
 
-- 
2.26.2
